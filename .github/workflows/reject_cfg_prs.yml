name: Reject CFG Directory PRs

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'cfg/**'

jobs:
  check-and-reject:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check if PR is from GitHub Actions or repository owner
        id: check-actor
        run: |
          # Get the list of changed files in the PR
          changed_files=$(gh pr view ${{ github.event.pull_request.number }} --json files --jq '.files[].path' | grep "^cfg/" || echo "")
          
          # Check if Custom_Clash_Full.ini is the only cfg file being modified
          if [[ "$changed_files" == "cfg/Custom_Clash_Full.ini" ]]; then
            echo "is_allowed=true" >> $GITHUB_OUTPUT
            echo "reason=excluded_file" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.pull_request.user.login }}" == "github-actions[bot]" ]]; then
            echo "is_allowed=true" >> $GITHUB_OUTPUT
            echo "reason=github_actions" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.pull_request.user.login }}" == "Aethersailor" ]]; then
            echo "is_allowed=true" >> $GITHUB_OUTPUT
            echo "reason=repository_owner" >> $GITHUB_OUTPUT
          else
            echo "is_allowed=false" >> $GITHUB_OUTPUT
            echo "reason=unauthorized_user" >> $GITHUB_OUTPUT
          fi
          
          echo "PR author: ${{ github.event.pull_request.user.login }}"
          echo "Changed cfg files: $changed_files"
          echo "Is allowed: ${{ steps.check-actor.outputs.is_allowed }}"
          echo "Reason: ${{ steps.check-actor.outputs.reason }}"

      - name: Reject unauthorized PRs
        if: steps.check-actor.outputs.is_allowed == 'false'
        run: |
          echo "üö´ Rejecting PR #${{ github.event.pull_request.number }}"
          echo "Reason: Unauthorized user trying to modify /cfg directory"
          echo "Only GitHub Actions and repository owner can modify files in the /cfg directory"
          
          # Add a comment to the PR
          gh pr comment ${{ github.event.pull_request.number }} \
            --body "## ‚ùå PR Rejected

          This PR has been automatically rejected because it contains modifications to files in the `/cfg` directory.

          ### Why was this rejected?
          - Modifying `.ini` template files will affect all users' configured node options
          - Except for the Full template, other templates do not accept any PRs
          - This ensures configuration integrity and prevents disruption to existing user setups
          - Only GitHub Actions workflows and repository owner can modify these files

          ### What should you do?
          - If you need to modify configuration files, please update the source files instead
          - The GitHub Actions workflows will automatically generate the appropriate `/cfg` files
          - If you believe this rejection is in error, please contact the repository maintainers

          ---
          *This is an automated response from the repository protection system.*"

      - name: Close unauthorized PRs
        if: steps.check-actor.outputs.is_allowed == 'false'
        run: |
          gh pr close ${{ github.event.pull_request.number }} \
            --delete-branch \
            --reason "not_planned"

      - name: Allow authorized PRs
        if: steps.check-actor.outputs.is_allowed == 'true'
        run: |
          echo "‚úÖ Allowing PR #${{ github.event.pull_request.number }}"
          echo "Reason: This PR was created by ${{ steps.check-actor.outputs.reason }}"
          
          # Add a comment to confirm it's allowed
          if [[ "${{ steps.check-actor.outputs.reason }}" == "github_actions" ]]; then
            gh pr comment ${{ github.event.pull_request.number }} \
              --body "## ‚úÖ PR Allowed

          This PR has been automatically allowed because it was created by GitHub Actions.

          ### Why was this allowed?
          - This PR was created by a GitHub Actions workflow
          - Automated updates to `/cfg` directory are permitted
          - The changes are part of the automated configuration generation process

          ---
          *This is an automated response from the repository protection system.*"
          elif [[ "${{ steps.check-actor.outputs.reason }}" == "excluded_file" ]]; then
            gh pr comment ${{ github.event.pull_request.number }} \
              --body "## ‚úÖ PR Allowed

          This PR has been allowed because it only modifies `Custom_Clash_Full.ini`.

          ### Why was this allowed?
          - `Custom_Clash_Full.ini` is excluded from protection rules
          - This file can be modified by any user
          - Other `/cfg` directory files remain protected

          ---
          *This is an automated response from the repository protection system.*"
          else
            gh pr comment ${{ github.event.pull_request.number }} \
              --body "## ‚úÖ PR Allowed

          This PR has been allowed because it was created by the repository owner.

          ### Why was this allowed?
          - This PR was created by the repository owner
          - Repository owners have full access to modify files in this directory
          - Manual modifications by the owner are permitted

          ---
          *This is an automated response from the repository protection system.*"
          fi

      - name: Show PR Details
        run: |
          echo "PR Number: ${{ github.event.pull_request.number }}"
          echo "PR Title: ${{ github.event.pull_request.title }}"
          echo "PR Author: ${{ github.event.pull_request.user.login }}"
          echo "PR URL: ${{ github.event.pull_request.html_url }}"
          echo "Changed Files:"
          gh pr view ${{ github.event.pull_request.number }} --json files --jq '.files[].path' 