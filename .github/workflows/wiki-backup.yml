name: Backup wiki

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 每天凌晨同步，可修改

jobs:
  backup-wiki-root:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repository
        uses: actions/checkout@v3

      - name: Clone wiki repository with auth
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone https://x-access-token:${TOKEN}@github.com/Aethersailor/Custom_OpenClash_Rules.wiki.git _wiki

      - name: Clean old wiki backup
        run: |
          # 删除主仓库 wiki 目录下所有 .md 文件
          mkdir -p wiki
          find wiki -type f -name "*.md" -delete

      - name: Parse Home.md and copy files
        run: |
          # 读取 Home.md，逐条处理
          awk '/^[0-9]+\.\s*\[.*\]\(.*\)/ {print}' _wiki/Home.md | while read -r line; do
            # 序号
            num=$(echo "$line" | sed -n 's/^\([0-9]\+\)\..*/\1/p')
            # 提取链接中的文件名（URL 编码）
            raw_url=$(echo "$line" | sed -n 's/.*](.*\/wiki\/\(.*\)).*/\1/p')
            # 解码
            filename=$(python3 -c "import urllib.parse; print(urllib.parse.unquote('$raw_url'))")
            # 源文件路径
            src_file="_wiki/${filename}.md"
            # 目标文件路径
            dst_file="wiki/${num}.${filename}.md"

            echo "Processing: $src_file → $dst_file"

            # 如果文件存在，复制
            if [ -f "$src_file" ]; then
              cp "$src_file" "$dst_file"
            else
              echo "Warning: $src_file not found, skipping."
            fi
          done

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add wiki

          if ! git diff --cached --quiet; then
            git commit -m "Backup wiki root files from wiki repository"
            git push
          fi
